package taskA03;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Dictionary;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TaskA03 {

	public static void main(String[] args) throws IOException {
		
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		String line;
		int currentState;
		int nextState;
		int firstSpace;
		int secondSpace;
		Character value;
		Map<Vertex, List<Edge>> automata = new HashMap<Vertex, List<Edge>>();// = new Dictionary<Vertex, Edge>();
		//ArrayList<Edge> automata = new ArrayList();
		Vertex ver = new Vertex(0);
		Vertex ver2 = new Vertex(0);
		Map<Integer, Vertex> createdVertexes = new HashMap<Integer, Vertex>();//List<Vertex> createdVertexes;// = new List();
		Vertex[] finalStates;
		
		while ((line = reader.readLine()) != null && line.length() != 0) {
			
			firstSpace = line.indexOf(" ");
			
			if (firstSpace > -1) {
				
				currentState = Integer.parseInt(line.substring(0, firstSpace));
				
				secondSpace = line.lastIndexOf(" ");
				nextState = Integer.parseInt(line.substring(firstSpace + 1, secondSpace));
				
				value = new Character(line.substring(secondSpace));
				
				if (!ver.checkIfExists(createdVertexes, currentState)) {
					ver = new Vertex(currentState);
					createdVertexes.put(currentState, ver);
				}
				else {
					ver = ver.getVertex(createdVertexes, currentState);
				}
				
				if (!ver2.checkIfExists(createdVertexes, nextState)) {
					ver2 = new Vertex(nextState);
					createdVertexes.put(nextState, ver2);
				}
				else {
					ver2 = ver2.getVertex(createdVertexes, nextState);
				}
				
				automata.put(ver, Arrays.asList(new Edge(ver, ver2, value)));
			}
			else {
				currentState = Integer.parseInt(line);
				
				if (!ver.checkIfExists(createdVertexes, currentState)) {
					ver = new Vertex(currentState);
					createdVertexes.put(currentState, ver);
				}
				else {
					ver = ver.getVertex(createdVertexes, currentState);
				}
				
				
			}
		}
	}

}
