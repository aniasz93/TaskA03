package taskA03;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Dictionary;
import java.util.List;
import java.util.Map;

public class TaskA03 {

	public static void main(String[] args) throws IOException {
		
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		String line;
		int currentState;
		int nextState;
		int firstSpace;
		int secondSpace;
		Character value;
		Map<Vertex, List<Edge>> automata;// = new Dictionary<Vertex, Edge>();
		//ArrayList<Edge> automata = new ArrayList();
		Vertex ver;
		Vertex ver2;
		List<Vertex> createdVertexes;// = new List();
		
		while ((line = reader.readLine()) != null && line.length() != 0) {
			
			firstSpace = line.indexOf(" ");
			currentState = Integer.parseInt(line.substring(0, firstSpace - 1));
			
			secondSpace = line.lastIndexOf(" ");
			nextState = Integer.parseInt(line.substring(firstSpace + 1, secondSpace - 1));
			
			value = new Character(line.substring(secondSpace + 1));
			
			if (!ver.checkIfExists(createdVertexes, currentState)) {
				ver = new Vertex(currentState);
				createdVertexes.add(ver);
			}
			else {
				ver = 
			}
			
			if (!ver2.checkIfExists(createdVertexes, nextState)) {
				createdVertexes.add(nextState);
				ver2 = new Vertex(nextState);
			}
			
			
			ver2 = new Vertex(nextState);
			automata.put(ver, Arrays.asList(new Edge(ver, ver2, value)));
			
			for (Vertex edge : automata)
			{
				if (edge.isExist(currentState)) {
					
				}
			}
			
			automata.add(new Edge(new Vertex(currentState), new Vertex(nextState), new Character(value)));

		}
		
		/*boolean result1 = (new Integer(126) == new Integer(127));
		boolean result2 = (new Integer(128) == new Integer(128));
		System.out.println(result1);
		System.out.println(result2);*/s
	}

}
